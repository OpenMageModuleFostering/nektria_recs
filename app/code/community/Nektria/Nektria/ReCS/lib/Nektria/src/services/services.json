{
	"name": "ReCS API",
	"apiVersion": "1.1.17",
	"description": "Responsive eCommerce Shipping API",
	"operations": {
		"test": {
			"httpMethod": "GET",
			"uri": "test",
			"summary": "Test request is useful to verify the client authentication is correct",
			"responseClass": "TestOutput"
		},
		"serviceCreation": {
			"httpMethod": "POST",
			"uri": "services",
			"summary": "Service Creation - trying unsuccessfully to use responseClass \\Nektria\\Recs\\MerchantApiMessages\\ResponseBodyWrapper", 
			"responseClass": "GenericOutput",
			"parameters":{			    
				"services": {
					"location": "json",
					"type": "array",
					"description": "Type of services requested (should be classic + last-mile)",
					"required": true
				},
				"shopper": {
					"location": "json",
					"type": "array",
					"description": "Shopper name and contact details",
					"required": true
			  	},
				"destination_address": {
					"location": "json",
					"type": "array",
					"description": "Shopper address",
					"required": true
				},
				"products": {
					"location": "json",
					"type": "array",
					"description": "List of products in the shopping basket",
					"required": true
				},
				"session_timeout": {
					"location": "json",
					"type": "integer",
					"description": "store session duration in seconds",
					"required": false
				},
				"currency_code": {
					"location": "json",
					"type": "string",
					"description": "Requested currency code (3 letters) for following responses - expected EUR",
					"required": false
				}
			}		
		},
		"lastMileAvailability": {
			"httpMethod": "POST",
			"uri": "services/{id}/last-mile",
			"summary": "Get availability windows and prices for the last mile delivery service.",
			"parameters": {
				"id": {
					"location": "uri",
					"description": "ID of service request",
					"required": true
				}
			},
			"responseClass": "GenericOutput"
		},
		"lastMileValidation": {
			"httpMethod": "PATCH",
			"uri": "services/{id}/last-mile/validate",
			"summary": "Choose delivery window for last mile and verify the price is correct.",
			"parameters": {
				"id": {
					"location": "uri",
					"description": "ID of service request",
					"required": true
				},
				"validation_windows": {
					"location": "json",
					"type": "array",
					"description": "Initially chosen delivery timeslots",
					"required": true
				},
				"delivery_windows": {
					"location": "json",
					"type": "array",
					"description": "Chosen delivery timeslots",
					"required": true
				},
				"total_price": {
					"location": "json",
					"type": "number",
					"description": "Total price of the delivery selection",
					"required": true
				},
				"currency_code": {
					"location": "json",
					"type": "string",
					"description": "Currency that is being used (should be EUR)",
					"required": true
				}				
			},
			"responseClass": "GenericOutput"
		},
		"lastMileConfirmation": {
			"httpMethod": "PATCH",
			"uri": "services/{id}/last-mile/confirm",
			"summary": "Confirm a last mile service",
			"parameters": {
				"id": {
					"location": "uri",
					"description": "ID of service request",
					"required": true
				},
				"order_number": {
					"location": "json",
					"type": "string",
					"description": "order number in eCommerce",
					"required": false
				}
			},
			"responseClass": "GenericOutput"
		},
		"classicAvailability": {
			"httpMethod": "POST",
			"uri": "services/{id}/classic",
			"summary": "Get availability and prices for classic delivery service",
			"parameters": {
				"id": {
					"location": "uri",
					"description": "ID of service request",
					"required": true
				}
			},
			"responseClass": "GenericOutput"
		},		
		"classicConfirmation": {
			"httpMethod": "PATCH",
			"uri": "services/{id}/classic/confirm",
			"summary": "Confirm a classic service",
			"parameters": {
				"id": {
					"location": "uri",
					"description": "ID of service request",
					"required": true
				},
				"order_number": {
					"location": "json",
					"type": "string",
					"description": "order number in eCommerce",
					"required": false
				}
			},
			"responseClass": "GenericOutput"
		},
		"keepAlive": {
			"httpMethod": "PATCH",
			"uri": "services/{id}/keep-alive",
			"summary": "Reset last mile request timeout so it does not expire",
			"parameters": {
				"id": {
					"location": "uri",
					"description": "ID of service request",
					"required": true
				}
			},
			"responseClass": "GenericOutput"
		},
		"getAssets": {
			"httpMethod": "GET",
			"uri": "services/{id}/assets",
			"summary": "Retrieve locations of the assets for the widget",
			"parameters": {
				"id": {
					"location": "uri",
					"description": "ID of service request",
					"required": true
				},
				"language": {
				  "location": "query",
				  "type": "string",
				  "description": "locale descriptor (5 letters)",
				  "required": false
				},
				"version": {
				  "location": "query",
				  "type": "string",
				  "description": "asset version number requested",
				  "required": false
				}
			},
			"responseClass": "GenericOutput"
		},
	    "showShipping": {
                "httpMethod": "GET",
           		"uri": "services/{id}/shipping",
           		"summary": "Retrieve information about a shipping",
           		"parameters": {
	                "id": {
	                         "location": "uri",
	                         "description": "ID of service request",
	                         "required": true
	                 }
               },
               "responseClass": "GenericOutput"
		},
		"backendAccess": {
		  "httpMethod": "GET",
		  "uri": "configuration/backend-access",
		  "summary": "Get link to edit merchant's advanced settings",
		  "responseClass": "GenericOutput"
		},
		"registrationAccess": {
		  "httpMethod": "GET",
		  "uri": "configuration/registration-access",
		  "summary": "Get link to log in to your account or to create a new account",
		  "responseClass": "GenericOutput"
		},
		"sandboxApiKey": {
		  "httpMethod": "GET",
		  "uri": "configuration/sandbox-api-key",
		  "summary": "Get an Api Key for running test requests",
		  "responseClass": "GenericOutput"
		},
		"coverage": {
		  "httpMethod": "GET",
		  "uri": "configuration/coverage",
		  "summary": "Retrieve countries covered by the service",
		  "responseClass": "GenericOutput"
		},
		"lastMileBestPrice": {
		  "httpMethod": "GET",
		  "uri": "last-mile-best-price",
		  "summary": "Find out the best offer we can boast before we know destination address",
		  "responseClass": "GenericOutput"
		}
	},
	"models": {
		"TestOutput": {
            "type": "object",
            "properties": {
				"status": {
                 	"location": "json",
                    "type": "string"
                },
				"httpStatus": {
				  "location": "statusCode",
				  "type": "string"
				},
			    "message": {
				  "location": "json",
				  "type": "string"
			    },
			    "code": {
				  "location": "json",
				  "type": "string"
			    },
                "content": {
                	"type": "null",
                	"location": "json"
                }
            }
        },
       	"GenericOutput": {
            "type": "object",
            "properties": {
				"httpStatus": {
				  "location": "statusCode",
				  "type": "string"
				},
				"status": {
                 	"location": "json",
                    "type": "string"
                },
			    "message": {
				  "location": "json",
				  "type": "string"
			    },
			    "code": {
				  "location": "json",
				  "type": "string"
			    },
                "content": {
                	"type": "object",
                	"location": "json",
                	"additionalProperties": true
                }
            }
        }
	}
}
